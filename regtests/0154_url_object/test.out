started
p1=1
p2=toto
----------------------
p1=1
p2=toto
----------------------
URI         = /get_it
URL         = http://localhost:port/get_it?p1=1&p2=toto 
Query       = p1=1&p2=toto
Path        = /
Pathname    = /get_it
File        = get_it
Parameters  = ?p1=1&p2=toto
Server_Name = localhost
p1=0956
p2=uuu
----------------------
p1=0956
p2=uuu
----------------------
URI         = /get_it/disk.html
URL         = http://localhost:port/get_it/disk.html?p1=0956&p2=uuu 
Query       = p1=0956&p2=uuu
Path        = /get_it/
Pathname    = /get_it/disk.html
File        = disk.html
Parameters  = ?p1=0956&p2=uuu
Server_Name = localhost
shutdown

------------------------------------------------------
Testing Relative URL Resolution - RFC 2557 Section 5.2

Base: http://a/b/c/d;p?q
----------------------

Normal Examples:
Exception name: AWS.URL.URL_ERROR
Message: Wrong URL: (g:h) Port is not valid.

g                    -> g
FAILURE       Expected: http://a/b/c/g
* http://a/b/c/d;p
  Protocol = http
  Host     = a
  Abs_Path = /b/c/d;p
  Path     = /b/c/
  File     = d;p
* g
  Protocol = http
  Host     = 
  Abs_Path = g
  Path     = 
  File     = g

./g                  -> ./g
FAILURE       Expected: http://a/b/c/g
* http://a/b/c/d;p
  Protocol = http
  Host     = a
  Abs_Path = /b/c/d;p
  Path     = /b/c/
  File     = d;p
* ./g
  Protocol = http
  Host     = 
  Abs_Path = ./g
  Path     = ./
  File     = g

g/                   -> g/
FAILURE       Expected: http://a/b/c/g/
* http://a/b/c/d;p
  Protocol = http
  Host     = a
  Abs_Path = /b/c/d;p
  Path     = /b/c/
  File     = d;p
* g/
  Protocol = http
  Host     = 
  Abs_Path = g/
  Path     = g/
  File     = 

/g                   -> /g
FAILURE       Expected: http://a/g
* http://a/b/c/d;p
  Protocol = http
  Host     = a
  Abs_Path = /b/c/d;p
  Path     = /b/c/
  File     = d;p
* /g
  Protocol = http
  Host     = 
  Abs_Path = /g
  Path     = /
  File     = g

//g                  -> //g
FAILURE       Expected: http://g
* http://a/b/c/d;p
  Protocol = http
  Host     = a
  Abs_Path = /b/c/d;p
  Path     = /b/c/
  File     = d;p
* //g
  Protocol = http
  Host     = 
  Abs_Path = //g
  Path     = //
  File     = g

?y                   -> 
FAILURE       Expected: http://a/b/c/d;p?y
* http://a/b/c/d;p
  Protocol = http
  Host     = a
  Abs_Path = /b/c/d;p
  Path     = /b/c/
  File     = d;p
* 
  Protocol = http
  Host     = 
  Abs_Path = 
  Path     = 
  File     = 

g?y                  -> g
FAILURE       Expected: http://a/b/c/g?y
* http://a/b/c/d;p
  Protocol = http
  Host     = a
  Abs_Path = /b/c/d;p
  Path     = /b/c/
  File     = d;p
* g
  Protocol = http
  Host     = 
  Abs_Path = g
  Path     = 
  File     = g

#s                   -> #s
FAILURE       Expected: http://a/b/c/d;p?q#s
* http://a/b/c/d;p
  Protocol = http
  Host     = a
  Abs_Path = /b/c/d;p
  Path     = /b/c/
  File     = d;p
* #s
  Protocol = http
  Host     = 
  Abs_Path = #s
  Path     = 
  File     = #s

g#s                  -> g#s
FAILURE       Expected: http://a/b/c/g#s
* http://a/b/c/d;p
  Protocol = http
  Host     = a
  Abs_Path = /b/c/d;p
  Path     = /b/c/
  File     = d;p
* g#s
  Protocol = http
  Host     = 
  Abs_Path = g#s
  Path     = 
  File     = g#s

g?y#s                -> g
FAILURE       Expected: http://a/b/c/g?y#s
* http://a/b/c/d;p
  Protocol = http
  Host     = a
  Abs_Path = /b/c/d;p
  Path     = /b/c/
  File     = d;p
* g
  Protocol = http
  Host     = 
  Abs_Path = g
  Path     = 
  File     = g

;x                   -> ;x
FAILURE       Expected: http://a/b/c/;x
* http://a/b/c/d;p
  Protocol = http
  Host     = a
  Abs_Path = /b/c/d;p
  Path     = /b/c/
  File     = d;p
* ;x
  Protocol = http
  Host     = 
  Abs_Path = ;x
  Path     = 
  File     = ;x

g;x                  -> g;x
FAILURE       Expected: http://a/b/c/g;x
* http://a/b/c/d;p
  Protocol = http
  Host     = a
  Abs_Path = /b/c/d;p
  Path     = /b/c/
  File     = d;p
* g;x
  Protocol = http
  Host     = 
  Abs_Path = g;x
  Path     = 
  File     = g;x

g;x?y#s              -> g;x
FAILURE       Expected: http://a/b/c/g;x?y#s
* http://a/b/c/d;p
  Protocol = http
  Host     = a
  Abs_Path = /b/c/d;p
  Path     = /b/c/
  File     = d;p
* g;x
  Protocol = http
  Host     = 
  Abs_Path = g;x
  Path     = 
  File     = g;x

                     -> 
FAILURE       Expected: http://a/b/c/d;p?q
* http://a/b/c/d;p
  Protocol = http
  Host     = a
  Abs_Path = /b/c/d;p
  Path     = /b/c/
  File     = d;p
* 
  Protocol = http
  Host     = 
  Abs_Path = 
  Path     = 
  File     = 

.                    -> .
FAILURE       Expected: http://a/b/c/
* http://a/b/c/d;p
  Protocol = http
  Host     = a
  Abs_Path = /b/c/d;p
  Path     = /b/c/
  File     = d;p
* .
  Protocol = http
  Host     = 
  Abs_Path = .
  Path     = .
  File     = 

./                   -> ./
FAILURE       Expected: http://a/b/c/
* http://a/b/c/d;p
  Protocol = http
  Host     = a
  Abs_Path = /b/c/d;p
  Path     = /b/c/
  File     = d;p
* ./
  Protocol = http
  Host     = 
  Abs_Path = ./
  Path     = ./
  File     = 

..                   -> ..
FAILURE       Expected: http://a/b/
* http://a/b/c/d;p
  Protocol = http
  Host     = a
  Abs_Path = /b/c/d;p
  Path     = /b/c/
  File     = d;p
* ..
  Protocol = http
  Host     = 
  Abs_Path = ..
  Path     = ..
  File     = 

../                  -> ../
FAILURE       Expected: http://a/b/
* http://a/b/c/d;p
  Protocol = http
  Host     = a
  Abs_Path = /b/c/d;p
  Path     = /b/c/
  File     = d;p
* ../
  Protocol = http
  Host     = 
  Abs_Path = ../
  Path     = ../
  File     = 

../g                 -> ../g
FAILURE       Expected: http://a/b/g
* http://a/b/c/d;p
  Protocol = http
  Host     = a
  Abs_Path = /b/c/d;p
  Path     = /b/c/
  File     = d;p
* ../g
  Protocol = http
  Host     = 
  Abs_Path = ../g
  Path     = ../
  File     = g

../..                -> ../..
FAILURE       Expected: http://a/
* http://a/b/c/d;p
  Protocol = http
  Host     = a
  Abs_Path = /b/c/d;p
  Path     = /b/c/
  File     = d;p
* ../..
  Protocol = http
  Host     = 
  Abs_Path = ../..
  Path     = ../..
  File     = 

../../               -> ../../
FAILURE       Expected: http://a/
* http://a/b/c/d;p
  Protocol = http
  Host     = a
  Abs_Path = /b/c/d;p
  Path     = /b/c/
  File     = d;p
* ../../
  Protocol = http
  Host     = 
  Abs_Path = ../../
  Path     = ../../
  File     = 

../../g              -> ../../g
FAILURE       Expected: http://a/g
* http://a/b/c/d;p
  Protocol = http
  Host     = a
  Abs_Path = /b/c/d;p
  Path     = /b/c/
  File     = d;p
* ../../g
  Protocol = http
  Host     = 
  Abs_Path = ../../g
  Path     = ../../
  File     = g


Too much '..':
../../../g           -> ../../../g
FAILURE       Expected: http://a/g
* http://a/b/c/d;p
  Protocol = http
  Host     = a
  Abs_Path = /b/c/d;p
  Path     = /b/c/
  File     = d;p
* ../../../g
  Protocol = http
  Host     = 
  Abs_Path = ../../../g
  Path     = ../../../
  File     = g

../../../../g        -> ../../../../g
FAILURE       Expected: http://a/g
* http://a/b/c/d;p
  Protocol = http
  Host     = a
  Abs_Path = /b/c/d;p
  Path     = /b/c/
  File     = d;p
* ../../../../g
  Protocol = http
  Host     = 
  Abs_Path = ../../../../g
  Path     = ../../../../
  File     = g


Do not remove '.' and '..' in path components:
/./g                 -> /./g
FAILURE       Expected: http://a/g
* http://a/b/c/d;p
  Protocol = http
  Host     = a
  Abs_Path = /b/c/d;p
  Path     = /b/c/
  File     = d;p
* /./g
  Protocol = http
  Host     = 
  Abs_Path = /./g
  Path     = /./
  File     = g

/../g                -> /../g
FAILURE       Expected: http://a/g
* http://a/b/c/d;p
  Protocol = http
  Host     = a
  Abs_Path = /b/c/d;p
  Path     = /b/c/
  File     = d;p
* /../g
  Protocol = http
  Host     = 
  Abs_Path = /../g
  Path     = /../
  File     = g

g.                   -> g.
FAILURE       Expected: http://a/b/c/g.
* http://a/b/c/d;p
  Protocol = http
  Host     = a
  Abs_Path = /b/c/d;p
  Path     = /b/c/
  File     = d;p
* g.
  Protocol = http
  Host     = 
  Abs_Path = g.
  Path     = 
  File     = g.

.g                   -> .g
FAILURE       Expected: http://a/b/c/.g
* http://a/b/c/d;p
  Protocol = http
  Host     = a
  Abs_Path = /b/c/d;p
  Path     = /b/c/
  File     = d;p
* .g
  Protocol = http
  Host     = 
  Abs_Path = .g
  Path     = 
  File     = .g

g..                  -> g..
FAILURE       Expected: http://a/b/c/g..
* http://a/b/c/d;p
  Protocol = http
  Host     = a
  Abs_Path = /b/c/d;p
  Path     = /b/c/
  File     = d;p
* g..
  Protocol = http
  Host     = 
  Abs_Path = g..
  Path     = 
  File     = g..

..g                  -> ..g
FAILURE       Expected: http://a/b/c/..g
* http://a/b/c/d;p
  Protocol = http
  Host     = a
  Abs_Path = /b/c/d;p
  Path     = /b/c/
  File     = d;p
* ..g
  Protocol = http
  Host     = 
  Abs_Path = ..g
  Path     = 
  File     = ..g


Unnecessary '.' and '..':
./../g               -> ./../g
FAILURE       Expected: http://a/b/g
* http://a/b/c/d;p
  Protocol = http
  Host     = a
  Abs_Path = /b/c/d;p
  Path     = /b/c/
  File     = d;p
* ./../g
  Protocol = http
  Host     = 
  Abs_Path = ./../g
  Path     = ./../
  File     = g

./g/.                -> ./g/.
FAILURE       Expected: http://a/b/c/g/
* http://a/b/c/d;p
  Protocol = http
  Host     = a
  Abs_Path = /b/c/d;p
  Path     = /b/c/
  File     = d;p
* ./g/.
  Protocol = http
  Host     = 
  Abs_Path = ./g/.
  Path     = ./g/.
  File     = 

g/./h                -> g/./h
FAILURE       Expected: http://a/b/c/g/h
* http://a/b/c/d;p
  Protocol = http
  Host     = a
  Abs_Path = /b/c/d;p
  Path     = /b/c/
  File     = d;p
* g/./h
  Protocol = http
  Host     = 
  Abs_Path = g/./h
  Path     = g/./
  File     = h

g/../h               -> g/../h
FAILURE       Expected: http://a/b/c/h
* http://a/b/c/d;p
  Protocol = http
  Host     = a
  Abs_Path = /b/c/d;p
  Path     = /b/c/
  File     = d;p
* g/../h
  Protocol = http
  Host     = 
  Abs_Path = g/../h
  Path     = g/../
  File     = h

g;x=1/./y            -> g;x=1/./y
FAILURE       Expected: http://a/b/c/g;x=1/y
* http://a/b/c/d;p
  Protocol = http
  Host     = a
  Abs_Path = /b/c/d;p
  Path     = /b/c/
  File     = d;p
* g;x=1/./y
  Protocol = http
  Host     = 
  Abs_Path = g;x=1/./y
  Path     = g;x=1/./
  File     = y

g;x=1/../y           -> g;x=1/../y
FAILURE       Expected: http://a/b/c/y
* http://a/b/c/d;p
  Protocol = http
  Host     = a
  Abs_Path = /b/c/d;p
  Path     = /b/c/
  File     = d;p
* g;x=1/../y
  Protocol = http
  Host     = 
  Abs_Path = g;x=1/../y
  Path     = g;x=1/../
  File     = y


Separate query and fragment:
g?y/./x              -> g
FAILURE       Expected: http://a/b/c/g?y/./x
* http://a/b/c/d;p
  Protocol = http
  Host     = a
  Abs_Path = /b/c/d;p
  Path     = /b/c/
  File     = d;p
* g
  Protocol = http
  Host     = 
  Abs_Path = g
  Path     = 
  File     = g

g?y/../x             -> g
FAILURE       Expected: http://a/b/c/g?y/../x
* http://a/b/c/d;p
  Protocol = http
  Host     = a
  Abs_Path = /b/c/d;p
  Path     = /b/c/
  File     = d;p
* g
  Protocol = http
  Host     = 
  Abs_Path = g
  Path     = 
  File     = g

g#s/./x              -> g#s/./x
FAILURE       Expected: http://a/b/c/g#s/./x
* http://a/b/c/d;p
  Protocol = http
  Host     = a
  Abs_Path = /b/c/d;p
  Path     = /b/c/
  File     = d;p
* g#s/./x
  Protocol = http
  Host     = 
  Abs_Path = g#s/./x
  Path     = g#s/./
  File     = x

g#s/../x             -> g#s/../x
FAILURE       Expected: http://a/b/c/g#s/../x
* http://a/b/c/d;p
  Protocol = http
  Host     = a
  Abs_Path = /b/c/d;p
  Path     = /b/c/
  File     = d;p
* g#s/../x
  Protocol = http
  Host     = 
  Abs_Path = g#s/../x
  Path     = g#s/../
  File     = x


No scheme in relative URI (strict):
Exception name: AWS.URL.URL_ERROR
Message: Wrong URL: (http:g) Port is not valid.

