Known Problems fixed in AWS 2.10

- KA10-005: Download Manager could lock
  Problem:    An initiated download that is actually never downloaded could
              lock the download manager.
  Workaround: Avoid reloading web pages when a download is initiated.

- KA08-001: Memory leak in client connection for wrong URL
  Problem:    When an invalid URL is used on AWS.Client.Get the socket is
              not properly freed. This creates a memory leak.
  Workaround: Check URL validity first.

- K806-002: Fix memory leak when a wrong SMTP server is used.
  Problem:    When a wrong SMTP server name is used, the AWS.SMTP.Client.Send
              routine leaked memory on each call.
  Workaround: Fix the name of the SMTP server.

- K722-021: Properly match URI regexp at first character
  Problem:    The URI regular expression used in AWS.Services.Dispatchers.URI
              was not properly matching from the start of the URI.
  Workaround: Change the regexp registering order to match the expected
              behavior when possible.

- K308-027 : Dispatchers.URI.Register_Regexp supporting globing patterns
  Problem:   Despite what was in the documented in the spec, the
             implementation of the Register_Regexp was wrong. A globing
             pattern was used instead of a regular expression.
  Workaround: Use a globing pattern.

- K307-010: Logged status code for files always 200.
  Problem:    The status code for non existing files is 404, this is
              properly sent to the web browser but 200 is stored into
              the log file. Likewise for up-to-date status code 304.
  Workaround: Properly check file status in callback and set the
              corresponding status code.

- K219-001: Exception raised for Response.Stream when file does not exist
  Problem:    When a Response.Stream based on a file is send back to the
              client and the actual file does not exist on disk an exception
              is raised. This is not a proper behavior. AWS now returns
              a 404 status code. This is also a cause of a memory leak.
  Workaround: Check file existence before creating the stream object

- JB05-022: Cannot write more than 2**31 bytes in a compressed stream
  Problem:    With a 32 bits compiler, writing more than 2**31 bytes into a
              compressed stream raises a constraint error.
  Workaround: Use a 64 bits compiler.

- J511-016: Exception raised for Response.File when file does not exist
  Problem:    When a Response.File is sent back by the client callback and
              the actual file does not exist on disk an exception is
              raised. This is not a proper behavior. AWS now returns
              a 404 status code.
  Workaround: Check file existence before calling Response.File
