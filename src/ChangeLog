2001-09-21  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-client.ads:
	Fix typos in comment.

	* aws-config-set.ads:
	Fix typos in comment.

	* aws-config.ads:
	Fix typos in comment.

	* aws-server.ads:
	Fix typo in comment.

	* aws-status.ads:
	Fix typo in comment.

2001-09-20  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-server.ads:
	(Start): fix comment.

	* aws-log.adb:
	(Stop): check if file is open before closing it.

	* aws-server.adb:
	(Shutdown): Correctly wait for tasks to terminate before releasing
	 the memory. Further fix to avoid memory leak. Close the log.
	(Start): Properly set Web_Server.Shutdown to False. Fix problem
	 when starting/stopping a server.

	* aws-server.ads:
	(Shutdown): update comment.
	Fix typo.

2001-09-19  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-server.adb:
	(Line): do not handle Constraint_Error as an internal
	 error. AdaSockets has a bug and sends Constraint_Error when a
	 socket is closed while sending data. Constraint_Error should be
	 removed from the handler when this bug will be fixed.

	* aws-config-ini.adb:
	(Error_Message): Send error message to Current_Error.

	* aws-server.adb:
	(Line): Send error message to Current_Error.

	* aws-session.adb:
	(Cleaner): Send error message to Current_Error.

2001-09-14  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-log.adb:
	Removes empty line at end of file.

	* aws-messages.adb: 
	(Content_Type): add boundary data.
	(Transfer_Encoding): new function.

	* aws-messages.ads:
	Inline all constructor functions.
	(Content_Type): add boundary data.
	(Transfer_Encoding): new function.

	* aws-mime.ads:
	(Multipart_Mixed_Replace): new constant.

	* aws-server-push.adb:
	(Register): Use AWS.Messages constructors and AWS.MIME type to
	 build the response message.
	(Send_Date): Use AWS.Messages constructors to build the response
	 message.

	* aws-log.adb:
	Minor reformating.
	Add some comments.
	(Write): Undo previous change about log time format. This was
	 wrong since we want to keep compatibility with Apache log.

2001-09-13  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-response.ads: 
	Minor reformating.

	* aws-server-protocol_handler.adb:
	(Create_Session): check using No_Session constant.
	(Send_General_Header): convert the session ID using Session.Image
	 routine.

	* aws-session.adb:
	(Value): returns No_Session if SID is not a recognized AWS session ID.

	* aws-session.ads:
	(No_Session): new constant.
	(Value): add some comment.
	Reformating.

	* aws-status-set.adb:
	(Reset): D.Sesison_ID is now set to AWS.Session.No_Session.
	(Session): uses AWS.Session.Value to set D.Session_ID.

	* aws-status-set.ads:
	Minor reformating.

	* aws-status.adb: 
	(Has_Session): check using AWS.Session.No_Session which is cleaner.
	(Session): remove version returning a string (it is always
	 possible to use AWS.Session.Image to do so).

	* aws-status.ads:
	Add lot of comments.
	(Session): remove version returning a string (it is always
	 possible to use AWS.Session.Image to do so).
	(Data): Session_ID is not a Session.ID type.

	* aws-translator.ads: 
	Minor comment fix.

	* aws-url.adb:
	Reformating.

	* aws-session.ads: 
	Reformating.

	* aws-log.adb: 
	(Write): Fix log format. Minor reformating.

2001-09-12  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-session-control.adb:
	(Shutdown): Ask for termination of Cleaner_Control task. Release
	 the memory for the task access. Fix a memory leak.

	* aws-session.adb:
	(Cleaner): wait for next run and eventually accept a Stop
	 rendez-vous. In this case the task will exit from the loop.
	(Cleaner_Control.Stop): Returns now a boolean to tell if the session
	 cleaner task can be terminated or not.
	
	* aws-session.ads:
	(Cleaner): add entry Stop.
	(Cleaner_Control.Stop): Returns now a boolean to tell if the session
	 cleaner task can be terminated or not.
	(Cleaner_Task): put declaration outside the Cleaner_Control object.

2001-09-11  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-server.adb:
	(Shutdown): do nothing if the server has already been shutdown.

2001-09-10  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-communication-server.adb:
	(Start): Initialize Com_Server without discriminant, and set the
	 number of connection in Server.Start call.

	* aws-log.adb:
	Fix style.

	* aws-server-get_status.adb:
	Use Max_Connection from the server properties.

	* aws-server.adb: 
	(Shutdown): release memory allocated for the slots HTTP field. Use
	 Max_Connection from the server properties.
	(Start): add parameter Max_Connection. Use Max_Connection from the
	 server properties.
	(Line): Use Max_Connection from the server properties.
	(Finalize): new routine for HTTP limited controlled type.

	* aws-server.ads:
	(HTTP): remove Max_Connection discriminant. It is now a limited
	 controlled object, ressources will be freed automatically when
	 leaving the HTTP variable scope. Field Slots is now an access type.
	(Start): add parameter Max_Connection.
	(Finalize): new routine for HTTP limited controlled type.

	* aws-server-protocol_handler.adb:
	(Answer_To_Client): Removes Peername parameter in Log.Write call
	 since it is not needed anymore.

	* aws-log.adb:
	(Write): new procedure. For user's log.
	Use AWS.OS_Lib instead of GNAT.OS_Lib.
	
	* aws-log.ads:
	(Write): remove Peername which is now into the connection status.
	(Write): new procedure. For user's log.
	Add some comments.

	* aws-server-get_status.adb:
	(Translations): Add START_TIME tag.

	* aws-server.adb:
	(Start): Set the Start_Time field with current date and time.

	* aws-server.ads:
	(HTTP): Add Start_Time field.

	* aws-server-protocol_handler.adb:
	Removes a duplicate with line for Stream_IO.
	Add some comments.
	Minor layout fix.

	* aws-server.adb:
	(Shutdown): release memory for new task access.
	(Start): minor layout change.
	(Start): create tasks objects.

	* aws-server.ads:
	(Line_Set_Access): new type.
	(Line_Cleaner_Access): new type.
	(HTTP): use Line_Cleaner_Access and Line_Set_Access to avoid
	 creating the tasks when HTTP object is created.

2001-09-06  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-server-protocol_handler.adb:
	(Send_General_Header): use Messages.Connection constructor.

2001-09-05  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-server-protocol_handler.adb:
	(Send_File_Size): removed. Use directly the Messages.Content_Length
	 constructor and the Answer message length which is now always
	 correct (for message and file).
	(Send_File): add File_Size parameter.
	(Send_File_Time): use Messages.Last_Modified constructor.

	* aws-response.adb:
	(File): compute the file size and set the content length field
	 properly (was always set to 0).
	 (Module): 

	* aws-messages.adb: 
	(Last_Modified): new constructor.
	(Location): use Location_Token constant instead of string.

	* aws-messages.ads:
	(Last_Modified_Token): new constant.
	(Last_Modified_Range): new subtype.
	(Last_Modified): new constructor.

	* aws-log.adb: 
	(Write): Add parameter Answer and removes Answer_Stat. Write the
	 content length that has been transfered. Now the log format is
	 the same than most standard Web servers.

	* aws-log.ads:
	(Write): Add parameter Answer and removes Answer_Stat. This is
	 need to add the data size transfered in the log.

2001-09-03  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-session.adb:
	(Key_Exist): Add exception handler to properly exit from this
	 routine and set Result to False.

2001-09-02  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-messages.ads:
	(Referer_Token): new constant.
	(Referer_Range): new subtype.

	* aws-server-protocol_handler.adb:
	(Parse): handles User_Agent and Referer fields.

	* aws-status-set.ads, aws-status-set.adb:
	(User_Agent): new procedure.
	(Referer): new procedure.
	
	* aws-status.adb:
	(User_Agent): new function.
	(Referer): new function.

	* aws-status.ads:
	(User_Agent): new function.
	(Referer): new function.
	(Data): add User_Agent and Referer field.

2001-08-31  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-config-ini.adb: 
	(Read): parameters' value is now everything after the parameter name.

2001-08-30  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-client.adb:
	Minor style fix.

	* aws-server.adb:
	(Start): Use Accept_Queue_Size configuration parameter in the call
	 to Listen.

	* aws-config-set.ads, aws-config-set.adb:
	(Accept_Queue_Size): new procedure to set the accepting queue
	 size. This help support heavy loaded server.

	* aws-config.adb:
	(Accept_Queue_Size): new function to retrieve the accepting queue
	 size. This help support heavy loaded server.

	* aws-config.ads:
	(Accept_Queue_Size): new function to retrieve the accepting queue
	 size. This help support heavy loaded server.
	(Parameter_Name): add Accept_Queue_Size.
	(Default_Parameter): add Accept_Queue_Size.

	* aws-default.ads:
	(Accept_Queue_Size): new constant.

	* aws-client.adb:
	Removes unused with clause (Ada.Text_IO).

2001-08-26  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-server-protocol_handler.adb:
	(Send_Message): change Put_Line by a simple Put. Fix a problem
	 when sending big message.
	(Get_Message_Data): Uses MIME.Appl_Form_Data instead of
	 Messages.Form_Data. Idem for MIME.Multipart_Data. Check for SOAP
	 message and correctly set the payload request in this case.
	(Parse): parse the SOAPAction HTTP header.
	This is work to support SOAP over HTTP.	

	* aws-client.adb:
	(Send_Command): rename to Open_Send_Common_Header.
	(Get_Response): check for HTML and XML message to support SOAP
	 message.
	(SOAP_Post): new function. This is to support SOAP request over
	 HTTP.
	(Open_Send_Common_Header): Use No_Data to check for cookie. Add
	 SOAPAction header if needed.
	(Create.Set): New function.
	(Create): correctly set to Null_Unbounded_String string that are
	 not initialized.
	Declare all Try_Count variables as Natural.
	(Post): Add SOAPAction checks.
	Fix layout.

	* aws-client.ads:
	(SOAP_Post): new function. This is to support SOAP request over
	 HTTP.
	(Create): add SOAPAction parameter.
	(HTTP_Connection): Add field SOAPAction.

	* aws-messages.adb:
	(SOAPAction): new function.

	* aws-messages.ads:
	(SOAPAction): new function.
	(SOAPAction_Token): new constant.
	(SOAPAction_Range): new type.
	(Form_Data): moved to AWS.MIME.
	(Multipart_Form_Data): moved to AWS.MIME.

	* aws-status-set.ads, aws-status-set.adb:
	(SOAPAction): new procedure.
	(Payload): new procedure.
	This is work to support SOAP over HTTP.
	Fix layout.

	* aws-status.adb:
	(Is_SOAP): new function.
	(SOAPAction): new function.
	(Payload): new function.
	This is work to support SOAP over HTTP.

	* aws-status.ads:
	Fix parameters.
	(Is_SOAP): new function.
	(SOAPAction): new function.
	(Payload): new function.
	This is work to support SOAP over HTTP.

	* aws-mime.adb:
	(Dot_XML): new constant.
	(Type_Table): add Dot_XML to handle XML files.

	* aws-mime.ads:
	(Text_XML): new constant.
	(Appl_Form_Data): idem.
	(Multipart_Form_Data): idem.

	* aws-url.adb:
	Fix layout.

	* aws-url.ads:
	Add comments.

2001-08-19  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-server-protocol_handler.adb:
	Properly inititialize P_List before using it.

	* makefile:
	(build): add aws-server-push.adb in the list of file to not
	 compile with style check.

	* aws-server-push.adb:
	Fix casing error.

	* aws-client.adb: 
	(Parse_Header): add Cookie parameter which is set when parsing
 	 header. This part of the header was just ignored before.
	(Send_Command): output Set-Cookie: HTTP header if needed.

	* aws-client.ads: 
	(HTTP_Connection): add Cookie field to support HTTP client cookies.

	* aws-messages.ads:
	(Set_Cookie_Token): new constant.

	* aws-server-push.ads, aws-server-push.adb:
	Fix copyright notice.

	* aws.ads:
	(Version): set to 1.1.

2001-08-17  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-server.adb:
	Minor style fix.

	* aws-server-protocol_handler.adb:
	Many changes to support server push.
	(Socket_Taklen): new boolean.
	(Answer_To_Client): set socket in status data before calling
	 user's callback. Check for Soket_Taken answer.
	(Send_File_Chuncked.Hex): moved to AWS.Utils.
	Exit main loop if the Socket has been taken by user's.

	* aws-server-push.ads, aws-server-push.adb:
	Initial revision.

	* aws-status-set.adb: 
	(Socket): new procedure.
	
	* aws-status-set.ads: 
	(Socket): new procedure.
	Fix layout.

	* aws-status.adb:
	Put routines in alphabetical order.

	* aws-utils.ads, aws-utils.adb:
	(Hex): Moved here from Protocol_Handler.

2001-08-16  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-parameters.ads:
	(List): do not initialize Data field. This is now done by Reset to
	 avoid memory leak.

	* aws-parameters-set.adb: 
	(Reset): destroy data if it exists otherwise create an empty set.
	(Free): new procedure.

	* aws-parameters-set.ads:
	(Reset): fix comment.
	(Free): new procedure.

	* aws-status.ads, aws-status.adb:
	Miror reformating.

	* aws-server-protocol_handler.adb:
	(Socket_Taken): new boolean.

	* aws-status.adb:
	(Socket): new function.

	* aws-status.ads:
	(Socket): new function.
	(Data): add field Socket.

	* aws-server.adb:
	(Socket_Taken): new procedure in Slots protected object.
	(Release): do not shutdown Socket if it has been "taken".

	* aws-server.ads:
	(Socket_Taken): new procedure in Slots protected object.
	(Slot): add boolean field Socket_Taken.

	* aws-response.adb: 
	(Socket_Taken): new constructor function.

	* aws-response.ads:
	(Socket_Taken): new constructor function.
	(Data_Mode): Add Socket_Taken to the enumeration.

	* aws-server-protocol_handler.adb:
	Remove call to AWS.Parameters.Set.Reset has this this already done
	 by AWS.Status.Set.Reset.

	* aws-services-directory.adb:
	Close directory iterator and destroy internal tree (fix memory leak).

	* aws-status-set.adb:
	(Reset): call AWS.Parameters.Set.Reset.
	Minor reformating.

2001-08-08  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-config.ads:
	Style fix.

	* makefile:
	(clean): removes Emacs VC *~ files.
	
	* aws-default.ads, aws-config.ads, aws-config.adb,
	  aws-config-set.ads, aws-config-set.adb:
	Rename Log_File_Prefix to Log_Filename_Prefix.

	* aws-server.ads:
	(Start): removes Log_Split_Mode parameter, this is now on
	 Start_Log routine.
	(Start_Log): add Split_Mode and Filename_Prefix parameters.

	* aws-server.adb:
	(Start): removes Log_Split_Mode parameter, this is now on
	 Start_Log routine.
	(Start): do not set SO_REUSEADDR for the accepting server socket.
	(Start_Log): add Split_Mode and Filename_Prefix parameters. Set
	 the configuration accordingly.

2001-08-07  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-config.adb, aws-config-set.adb, aws-config-ini.adb: 
	Lot of changes to accommodate for new Object declaration.

	* aws-config.ads: 
	(Object): now a record to be able to initialize the all parameters.

	* aws-log.ads: 
	(Object): Initialize Split field.

	* aws-server-protocol_handler.adb: 
	Use CNF renaming for AWS.Config to avoid name clash.
	Pass the Log object when writting log info.

	* aws-server-get_status.adb:
	(Translations): Add LOG, LOG_FILE, LOG_MODE tag.

	* aws-config-ini.adb:
	Reorganize the code. Now the Read procedure update the
	 configuration object by reading only the filename passed in
	 parameter. The Server_Config object is updated at elaboration
	 time by reading 'aws.ini' and 'prognam.ini' files.

	* aws-config-ini.ads: 
	(Read): update comment.

	* aws-config.ads:
	(Get_Current): update comments.

	* aws-server.adb:
	Support the per-server logging facility.
	(Start): Add Log_Split_Mode parameter.
	(Config): new function.
	(Start_Log): new procedure.
	(Stop_Log): new procedure.
	Put routines in alphabetical order.

	* aws-server.ads:
	Support the per-server logging facility.
	(Start): Add Log_Split_Mode parameter.
	(Config): new function.
	(Start_Log): new procedure.
	(Stop_Log): new procedure.

	* aws.ads: 
	(Version): set to 1.0.

2001-08-06  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-config.adb: 
	With AWS.Config.Ini to initialize options set.
	(Get_Current): new function.
	(Log_File_Prefix): idem.
	(Log_Split_Mode): idem.
	(Session_Cleanup_Interval): remove object parameter as this is a
	 per-process option.
	(Session_Lifetime): idem.

	* aws-config.ads:
	Add support for 2 new options, Log_File_Prefix and Log_Split_Mode.
	Split the handling for per-process and per-server options.
	(Get_Current): new function.
	(Log_File_Prefix): idem.
	(Log_Split_Mode): idem.
	(Session_Cleanup_Interval): remove object parameter as this is a
	 per-process option.
	(Session_Lifetime): idem.
	(Server_Config): new variable to old per-process options.

	* aws-log.ads, aws-log.adb:
	A lot of changes to make this package an ADT.
	(Start): add Log, File_Directory and Filename_Prefix parameter.
	(Write): add Log object parameter.
	(Stop): idem.
	(Is_Active): new function.
	(Filename): idem.
	(Mode): idem.

	* aws-default.ads:
	(Log_File_Prefix): new constant.
	(Log_Split_Mode): new constant.

	* aws-config-set.ads, aws-config-set.adb:
	(Log_File_Prefix): new procedure.
	(Log_Split_Mode): new procedure.
	(Session_Cleanup_Interval): remove object parameter as this is a
	 per-process option.
	(Session_Lifetime): idem.

	* aws-config-ini.adb: 
	(Read): was a function it is now a procedure to be able to update
	 the configuration object. Handle per-server and per-process
	 options.
	Initialize Server_Config at elaboration.
	
	* aws-config-ini.ads: 
	(Read): was a function it is now a procedure to be able to update
	 the configuration object.

2001-08-05  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-server.adb:
	(Start): Fix typo.

	* aws-server.ads:
	(Def_Port): fix typo in constant declaration.

	* aws-default.ads:
	(Server_Name): new constant.

	* aws-server-protocol_handler.adb:
	Lot of changes to use new configuration API.
	(Answer_File): new procedure.

	* aws-server.ads, aws-server.adb:
	Lot of changes to use new configuration API.
	(Start): new routine using a configuration object to initialize
	 the server properties.
	(Set_Timeouts): new Slots protected procedure to set all server
	 timeouts.

	* aws-server-get_status.adb:
	(Translations): change table to use new configuration API.

	* aws-session-control.ads, aws-session-control.adb:
	(Start): add two parameters to control the session server.
	
	* aws-session.ads, aws-session.adb:
	(Start): add two parameters to control the session server.

2001-08-04  Pascal Obry  <p.obry@wanadoo.fr>

	* makefile:
	(SOURCES): add aws-config, aws-config-ini, aws-config-set, aws-default

	* aws-config-ini.ads:
	Update comment.

	* aws-config-set.ads:
	Reorder routine.

	* aws-config.adb: 
	A lot more changes to support ADT. All values moved to sepc.
	(Initialize): moved to AWS.Config.Ini.
	(Session): new function.
	(Security): new function.
	(Case_Sesitive_Parameters): new function.

	* aws-config.ads:
	Move constants for default AWS parameters into AWS.Default.
	This package is now designed as an ADT instead of an ASM. It is
	 then possible to have a configuration per server instead of per
	 process.
	All variables are move into the private part here to be accessible
	 from AWS.Config.Set.
	(Session): new function.
	(Security): new function.
	(Case_Sesitive_Parameters): new function.
	A lot more changes to support ADT.

	* aws-default.ads:
	Initial revision.

	* aws-config-set.ads, aws-config-set.adb: 
	Initial revision.

	* aws-config-ini.ads, aws-config-ini.adb:
	Initial revision.

2001-07-31  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-server.ads: 
	Minor reformating.

	* aws-log.adb: 
	(Log_Prefix): returns either the specicifed prefix or the program
	 name.
	(Start): add Log_File_Prefix field to control the log filename.

	* aws-log.ads:
	(Start): add Log_File_Prefix field to control the log filename.
	Minor reformating.

	* aws-log.adb:
	(Start): add code to handle Each_Run mode.

	* aws-log.ads: 
	(Split_Mode): add Each_Run to have a new log file every time the
	 server is started.
	Fix and add comments.

	* aws-server-protocol_handler.adb:
	(Answer_To_Client): check for empty Admin_URI. Now all URI
	 starting by Admin_URI are reserved. Speed up a bit the code.

2001-07-30  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-config.ads: 
	Minor reformating.

2001-07-28  Pascal Obry  <p.obry@wanadoo.fr>

	* makefile: 
	(SOURCES): Add AWS.Session.Control module.

	* aws-server.adb: 
	(Start): call Start from AWS.Session.Control was in AWS.Session.
	(Shutdown): call Shutdown from AWS.Session.Control was in AWS.Session.

	* aws-session.ads, aws-session.adb:
	(Start): moved to AWS.Session.Control.
	(Shutdown): moved to AWS.Session.Control.
	(Cleaner): moved from body to spec, needed for visibility from
	 AWS.Session.Control.
	(Cleaner_Control): idem.

	* aws-session-control.ads, aws-session-control.adb:
	Initial revision.

	* aws-services-directory.adb:
	Minor type fix.

	* aws-session.adb:
	(Add_Session): new entry into the Database protected record.
	(Save): new procedure.
	(Load): new procedure.

	* aws-session.ads:
	(Save): new procedure.
	(Load): new procedure.

2001-07-24  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-config.adb:
	(WWW_Root_Token): new constant.
	(WWW_Root_Value): new variable.
	(Parameters): add WW_Root handling into the table.
	(Program_Ini_File): correctly create the init filename from a
	 program name when it is launched using the full path name.
	(WWW_Root): new function.

	* aws-config.ads:
	(Default_WWW_Root): new constant.
	(WWW_Root): new function.

	* makefile:
	(build): do not build AWS.Services.Directory with optimization.

	* aws-session.adb: 
	(Cleaner_Control): new protected record to handle concurrent
	 access to the task cleaner creation.

2001-07-23  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-session.adb:
	Lot of changes to avoid memory leak and copy of the whole session
	 table during iteration.
	Fix layout.
	
2001-07-23  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-session.adb: 
	(Destroy): Destroy the root tree.
	(Generate_ID): new function.
	(Key_Exist): avoid raising an exception if the SID is not present
	 into the sessions table.
	(New_Session): use now Generate_ID to generate a uniq session ID.
	(Image): update to use new SID implementation.
	(Value): update to use new SID implementation.

	* aws-session.ads:
	(ID): type changed from an integer to a string.
	Minor style fix.

2001-07-22  Pascal Obry  <p.obry@wanadoo.fr>

	* makefile:
	(SOURCES): add aws-services.ads and aws-services-directory.adb units.

2001-07-21  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-services-directory.adb:
	Remove use of AVL_Tree_Gereric and use now a new AVL
	 implementation which is not buggy.
	Add case sensitive, mime, extension ordering.
	Order (Ascending or Descending) is now based on the casing of the
	 option instead of using a specific option for this. This reduce
	 the Web parameters size to be sent to the server.
	Fix code layout.
	Add lot of comments.

	* aws-services-directory.ads:
	Add lot of comments.

2001-07-19  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-response.adb:
	(Binary): check for null pointer and returns an null array instead
	 of raising an exception.

2001-07-18  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-log.adb:
	(Log_Prefix): Fix bug when program is launched from the current
	 working directory with ./progname. In this case the program name
	 computed was the empty string.

	* makefile:
	(SOURCES): change aws-key_value.adb to aws-key_value.ads since
	 this unit based on new component does not require a body.
	(build): idem.

	* aws-config.adb:
	Fix minor casing error.

	* aws-key_value.adb:
	Removed as it is not used anymore with the new design.

2001-07-17  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-key_value.ads, aws-parameters-set.adb, aws-parameters.ads,
	  aws-parameters.adb, aws-session.adb:
	Remove use of AVL_Tree_Generic (it was quite buggy) and now use a new
	 component. This was a serious error causing session data to stay
	 forever or even to have strange value added. The AVL tree was
	 corrupt after some adding/removing operations.

2001-06-30  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-session.adb:
	(Clean): Work around a GNAT bug when compiling with optimization on.

	* aws-client.ads:
	Reindent code.

	* aws-config.adb:
	(Hotplug_Port_Token): new constant.
	(Hotplug_Port_Value): new variable.
	(Hotplug_Port): new function.
	(Initialize): update comment.
	
	* aws-config.ads:
	(Default_Hotplug_Port): new constant.
	(Hotplug_Port): new function.

2001-06-23  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-*:
	Transfert the Copyright to ACTE.

	* aws-session.adb:
	(Session_Check_Interval): initialize using 
	 Config.Session_Cleanup_Interval.
	(Session_Lifetime): initialize using Config.Session_Lifetime.

	* aws-session.ads:
	(Default_Session_Lifetime): removed.

	* aws-server-get_status.adb:
	(Session_Table): add SESSIONS_TERMINATE_V.
	(Translations): add SESSION_CLEANUP_INTERVAL_V.

	* aws-config.adb: 
	(Session_Cleanup_Interval_Token): new constant.
	(Session_Lifetime_Token): idem.
	(Session_Cleanup_Interval_Value): new variable.
	(Session_Lifetime_Value): idem.
	(Session_Cleanup_Interval): new function.
	(Session_Lifetime): new function.
	(Parameters): add session lifetime and session cleanup interval.

	* aws-config.ads:
	(Five_Minutes): new constant.
	(Ten_Minutes): new constant.
	(Default_Session_Cleanup_Interval): new constant.
	(Default_Session_Lifetime): new constant.
	(Session_Cleanup_Interval): new function.
	(Session_Lifetime): new function.

2001-06-22  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-utils.ads, aws-utils.adb:
	(Image): on duration, new function.

	* aws-session.adb: 
	(Set_Session_Lifetime): renamed Set_Lifetime.
	(Get_Lifetime): new function.
	(Session_Check_Interval): new constant.
	(Cleaner): check for obsoltete session data every
	 Session_Check_Interval seconds instead of Session_Lifetime.
	(Database.Clean): can now removes many sessions at once.

	* aws-session.ads:
	(Set_Session_Lifetime): renamed Set_Lifetime.
	(Get_Lifetime): new function.

	* aws-server-protocol_handler.adb:
	Minor reformatting.

	* aws-server-get_status.adb:
	(Session_Table): Add Sessions_TS (time stamp).
	(Translations): idem.

2001-06-20  Pascal Obry  <p.obry@wanadoo.fr>

	* aws.ads:
	(Version): is set to 1.0pre.

	* aws-hotplug.adb:
	Minor reformatting.

	* aws-config.adb:
	Minor reformatting.

2001-06-07  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-response.adb:
	(Authenticate): coirrectly set the Realm string (was setting
	 location string instead).

	* aws-session.adb:
	(remove): new procedure.
	(Database.Remove_Key): new entry.
	Fix comments.

	* aws-session.ads:
	(remove): new procedure.

2001-06-06  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-services-directory.ads, aws-services-directory.adb:
	Initial revision.
	
	* aws-services.ads:
	Initial revision.

2001-05-30  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-translator.ads, aws-translator.adb:
	(To_String): new function.
	(To_Stream_Element_Array): new function.
	Minor reformating.

	* aws-server-protocol_handler.adb:
	(Cut_Command): handle filename with spaces. This fix is needed for
	 Netscape which does not code space by %20 in the HTTP header.
	(URI): decode URL to handle filenames with spaces.
	(Target_Filename): Use Upload_Path as set in the HTTP object.

	* aws-client.adb:
	(Post): new function with Stream_Element_Array data type.
	(Post): idem with Keep-Alive connection.
	(Post): fix a bug when sending body, was using Put_Line so CRLF
	 was added making the body length 2 characters too long.

	* aws-client.ads:
	(Post): new function with Stream_Element_Array data type.
	(Post): idem with Keep-Alive connection.

	* aws-server.adb:
	Minor reformating.

	* aws-server-protocol_handler.adb:
	(Get_Message_Data): set message body (binary data) when reading
	 POST paramters. This will be needed for the hotplug module.

	* aws-hotplug.adb:
	(Apply): handle GET and POST hotplug request.

2001-05-29  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-config.adb:
	Add some comments, minor reformating.

	* aws-parameters.adb:
	(Count): correctly returns the number of parameters in the list
	 and not the total number of node in the tree.

	* aws-hotplug.adb: 
	(Apply): Removes URI parameter and add Status. Call hotplug module
	 with parameters.
	(Apply.Parameters): new function.

	* aws-hotplug.ads:
	(Apply): Removes URI parameter and add Status. 

	* aws-server-protocol_handler.adb:
	(Answer_To_Client): when calling Hotplug.Apply pass full status
	 information and not just URI to be able to pass parameters to
	 hotplug module.
	(URI): call Decode_URL to be sure to decode encoded characters
	 into the URL. Fix problem with space in a filename.

2001-05-26  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-config.adb:
	Complete reimplementation. This unit is now based on a table. The
	 table filed are: the key name, a pointer to the variable which
	 hold the value and the type of the variable. It will be quite
	 easier to add new options with this implementation.
	This implementation is based on a patch supplied by Sune Falck.

	* aws-utils.ads, aws-utils.adb:
	Update copyright notice.

	* aws-translator.ads, aws-translator.adb:
	Update copyright notice.

	* aws.ads: 
	(Version): set to 0.11. Will probably be changed later to 1.0.

	* aws-parameters-set.adb:
	(Add): Handle case where the parameter name has some encoded
	 characters like $ or #.

	* aws-config.adb:
	Removed with GNAT.Regpat.
	(Process_Ini): use Strings.Fixed.Find_Token to parse the
	 file. Handle now properly the ini files.
	(Initialize): Fix typo in configuration file name.

	* aws-server-hotplug.ads, aws-server-hotplug.adb: 
	Update copyright notice.

	* aws-server-get_status.adb:
	Removes with AWS.Status.

	* aws-parameters.adb: 
	Update copyright notice.
	Fix typo.
	
	* aws-messages.ads, aws-messages.adb:
	Update copyright notice.

	* aws-hotplug.ads, aws-hotplug.adb:
	Update copyright notice.

2001-05-25  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-log.adb:
	Minor reformating.
	
	* aws-log.adb:
	Add with for Ada.Command_Line.
	Add with for AWS.Config.
	(Log_Prefix): new function.
	(Start): change log filename to use ISO date format.

	* aws-config.adb:
	(Proces_Ini): new procedure.
	(Program_Ini_File): new function.
	(Error_Message): add parameter Filename.
	(Regexp): add _ to match parameter name.
	(Initialize): process aws.ini and <program_name>.ini.

2001-05-24  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-server-protocol_handler.adb:
	(Answer_To_Client): Use Config.Logo_Image, Config.Status_Page,
	 Config.Up_Image and config.Down_Image instead of hard coded value.

	* aws-server-get_status.adb:
	Use Config.Status_Page instead of hard coded 'status.tmplt'.

	* aws-config.adb: 
	(Status_Page): new variable.
	(Up_Image): idem.
	(Down_Image): idem.
	(Logo_Image): idem.
	(Status_Page): new function.
	(Up_Image): idem.
	(Down_Image): idem.
	(Logo_Image): idem.

	* aws-config.ads:
	(Default_Status_Page): new constant.
	(Default_Up_Image): idem.
	(Default_Down_Image): idem.
	(Default_Logo_Image): idem.
	(Status_Page): new function.
	(Up_Image): idem.
	(Down_Image): idem.
	(Logo_Image): idem.

	* aws-server.ads:
	(Server_Processing): Fix comment.

	* aws-config.ads:
	Fix typo.

2001-05-21  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-response.ads, aws-response.adb:
	(Build): new function.
	(Message_Body): new function.

	* aws-server-protocol_handler.adb:
	(Send_Message): send message body as many chunk and update the
	 data timestamp between each.
	(Answer_To_Client): Set Phase to Server_Processing before calling
	 user's callback and put it to Server_Response just after.
	(Get_Message_Data): declare the buffer with the right size and
	 read data after.
	(Send_File): update the data timestamp.
	(Send_File_Chuncked): idem.

	* aws-server.adb:
	(Mark_Data_Time_Stamp): new procedure.
	(Is_Abortable): check for Data_Phase. We do not want to break a
	 transfert of big file.
	(Mark_Phase): if Phase is in Data_Phase adjust the data timestamp.
	Minor reformating.
	
	* aws-server.ads:
	(Slot_Phase): add Server_Processing.
	(Data_Phase): new subtype.
	(Timeouts): defined as constant.
	(Data_Timeouts): new constant.
	(Slot): add Data_Time_Stamp field.
	(Mark_Data_Time_Stamp): new procedure.

	* aws-config.adb: 
	(Send_Timeout): new function.
	(Receive_Timeout): new function.
	(Initialize): updated to parse Send_Timeout and Receive_Timeout.
	(Send_Timeout_Value): new variable;
	(Receive_Timeout_Value): new variable;
	
	* aws-config.ads:
	(Send_Timeout): new function.
	(Receive_Timeout): new function.
	(Default_Cleaner_Client_Data_Timeout): set to Height_Hours.
	(Default_Cleaner_Server_Response_Timeout): set to Height_Hours.
	(Force_Cleaner_Client_Data_Timeout): set to Three_Hours.
	(Force_Cleaner_Server_Response_Timeout): set to Three_Hours.
	
2001-05-19  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-config.adb:
	Fix casing.

	* aws-status.adb:
	(Count): removed.

	* aws-status-set.ads:
	Remove comment out code.
	Update copyright notice.

	* aws-server.adb: 
	(Slots.Get): is now a procedure was an entry.

	* aws-server.ads:
	(Timeouts): use AWS.Config*_Timeout function to initialize array.
	(Slots.Get): is now a procedure was an entry.

	* aws-server.adb: 
	(Start): add Upload_Directory parameter. Use default from
	 AWS.Config.

	* aws-server.ads:
	(Start): add Upload_Directory parameter. Use default from
	 AWS.Config.
	(HTTP): use default from AWS.Config.
	(Def_Admin_URI): new constant.
	(Def_Admin_Upload_Dir): new constant.
	(Def_Port): new constant.
	(Default_Connection): removed.
	(Default_Port): removed.
	(Default_Upload_Path): removed.
	(No_Admin): removed.
	
	* aws-communication-server.adb:
	(Receive): use new parameter interface.

	* aws-translator.ads, aws-translator.adb, aws-status-set.adb,
	  aws-parameters-set.adb, aws-client.adb:
	Rename Translater to Translat

	* aws-server-protocol_handler.adb:
	Call Mark_Phase after setting parameters.

	* aws-server.adb:
	Minor reformating.

	* aws-config.adb:
	(Cleaner_Wait_For_Client_Timeout_value): new variable.
	(Cleaner_Client_Header_Timeout_Value): new variable.
	(Cleaner_Client_Data_Timeout_Value): new variable.
	(Cleaner_Server_Response_Timeout_Value): new variable.
	(Force_Wait_For_Client_Timeout_Value): new variable.
	(Force_Client_Header_Timeout_Value): new variable.
	(Force_Client_Data_Timeout_Value): new variable.
	(Force_Server_Response_Timeout_Value): new variable.
	(Cleaner_Wait_For_Client_Timeout): new function.
	(Cleaner_Client_Header_Timeout): new function.
	(Cleaner_Client_Data_Timeout): new function.
	(Cleaner_Server_Response_Timeout): new function.
	(Force_Wait_For_Client_Timeout): new function.
	(Force_Client_Header_Timeout): new function.
	(Force_Client_Data_Timeout): new function.
	(Force_Server_Response_Timeout): new function.
	(Initialize): add parsing for all timeouts string.

	* aws-config.ads: 
	(Default_Server_Name): new constant.
	(Default_Admin_URI): new constant.
	(Default_Server_Port): new constant.
	(Default_Max_Connection): new constant.
	(Default_Log_File_Directory): new constant.
	(Default_Upload_Directory): new constant.
	(Default_Cleaner_Wait_For_Client_Timeout): new constant.
	(Default_Cleaner_Client_Header_Timeout): new constant.
	(Default_Cleaner_Client_Data_Timeout): new constant.
	(Default_Cleaner_Server_Response_Timeout): new constant.
	(Default_Force_Wait_For_Client_Timeout): new constant.
	(Default_Force_Client_Header_Timeout): new constant.
	(Default_Force_Client_Data_Timeout): new constant.
	(Default_Force_Server_Response_Timeout): new constant.
	(Cleaner_Wait_For_Client_Timeout): new function.
	(Cleaner_Client_Header_Timeout): new function.
	(Cleaner_Client_Data_Timeout): new function.
	(Cleaner_Server_Response_Timeout): new function.
	(Force_Wait_For_Client_Timeout): new function.
	(Force_Client_Header_Timeout): new function.
	(Force_Client_Data_Timeout): new function.
	(Force_Server_Response_Timeout): new function.

2001-05-18  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-client.adb:
	(Read_Chunk): new implementation. Do not use a recursive algorithm
	 to read the data to work-around a problem with gigantic stack size
	 used to build the result. Patch contributed by Wiljan Derks.

	* aws-server.adb:
	(Check_Timeouts): removed.
	(Abort_On_Timeout): new parameter Done.
	(Free_Slot): new function.
	(Get): change entry guard.
	(Line_Cleaner): new implementation. Fix another problem with abortion.
	(Line): check if there is some slot available, if not force
	 abortion of one.
	
	* aws-server.ads:
	(Check_Timeouts): removed.
	(Abort_On_Timeout): new parameter Done.
	(Free_Slot): new function.

2001-05-18  Pascal Obry  <p.obry@wanadoo.fr>
	
	* aws-server-protocol_handler.adb:
	(P_List): new variable.
	Many changes in the code to use routines in AWS.Parameters instead
	 of the removed ones in AWS.Status. Cleaner design.
	Reset P_List at each iteration.
	Associate the P_List with the C_Stat at each iteration.

	* aws-status-set.ads, aws-status-set.adb:
	(Request): remove Parameters routine's parameter.
	(Parameters): renamed Binary.
	(Parameter): removed.

	* aws-status.adb: 
	(Parameter_Name): moved to AWS.Parameters.
	(Parameter): idem.
	(count): idem.
	(Normalize_Name): idem.
	(Parameter): new procedure to add a parameter list to the status 
	 record.
	Remove unused unit Ada.Characters.Handling.

	* aws-status.ads:
	(Data): remove discriminant.
	(Parameter_Name): moved to AWS.Parameters.
	(Parameter): idem.
	(count): idem.
	(Normalize_Name): idem.
	(Parameter): new procedure to add a parameter list to the status 
	 record.

	* aws-server.adb:
	Remove some debuging code.

	* aws-server-get_status.adb:
	Remove unused unit Interfaces.C.

	* aws-parameters.ads:
	Redesign. All routine to change the parameters list are now in a
	 child package.
	(Empty_Set): removed.
	(Set): renamed List.
	(Add): moved to child package.
	(Release): rename Reset and moved to child package.
	Update copyright notice.
	Reformating.
	
	* aws-parameters.adb:
	Redesign. All routine to change the parameters list are now in a
	 child package.
	(Add): moved to child package.
	(Release): rename Reset and moved to child package.
	Update copyright notice.
	Reformating.
	
	* aws-parameters-set.ads, aws-parameters-set.adb:
	Initial revision.

2001-05-15  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-status.adb:
	(Has_Session): new function.

	* aws-status.ads:
	(Has_Session): new function.
	(Normalize_Name): minor reformating.

	* aws-client.adb:
	Minor reformating.

2001-05-14  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-server-protocol_handler.adb:
	(Send_File): fix wrong order of header lines.

	* aws-client.adb:
	Minor reformating.

	* aws-server-get_status.adb:
	(Slot_Table): updated to use new Is_Abortable function. Remove
	 specific handling for missing peername. This is now handled by
	 the template page.

	* aws-server-protocol_handler.adb:
	(Send_File): correctly send Cookie: and Date: header when file is
	 up-to-date.

	* aws-server.adb:
	(Check_Timeouts): is now a function (was a procedure).
	(Abort_Oldest): removed.
	(Abort_On_Timeout): new procedure.
	(Is_Abortable): new function.
	(Set_Abortable): removed.
	(Abortable_Count): removed.
	(Get): change implementation, use now the timeouts.
	(Line_Cleaner): use the standard timeouts to check for abortion.
	 This is a better implementation using less active checks.

	* aws-server.ads:
	(Slot): remove Abortable field.
	(Timeout_Mode): new type.
	(Timeouts): new array.
	(Check_Timeouts): is now a function (was a procedure).
	(Abort_Oldest): removed.
	(Abort_On_Timeout): new procedure.
	(Is_Abortable): new function.
	(Set_Abortable): removed.
	(Abortable_Count): removed.

2001-05-13  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-server-protocol_handler.adb:
	(Send_File): Send Date: field in the 304 case (up to date).
	
	* aws-server-protocol_handler.adb:
	Set properly the status of the socket actvity using Mark_Phase.

	* aws-server.adb:
	(Mark_Activity_Time): removed.
	(Mark_Phase): added.
	(Check_Timeouts): new procedure.
	(Set_Abortable): new procedure.
	Many changes to use new field Phase and Phase_Time_Stamp instead
	 of Opened and Activity_Time_Stamp.
	(Line_Cleaner): new algorithm to detect client not sending data
	 for some time. In this case we mark the slot Abortable.

	* aws-server.ads:
	(Client_Header_Timeout): new constant set to 5 seconds.
	(Slot): remove Opened and Activity_Time_Stamp fields, add Phase
	 and Phase_Time_Stamp.
	(Mark_Activity_Time): removed.
	(Mark_Phase): added.
	(Check_Timeouts): new procedure.
	(Set_Abortable): new procedure.
	(HTTP): add comments for the fields.
	
	* aws-server-get_status.adb:
	(Slot_Table): do not use Opened but Phase.

2001-05-09  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-session.ads:
	(ID): defined using Max_Int.

	* aws-hotplug-get_status.adb:
	Use suffix _V for vector tag (was _L for historical reasons).
	
	* aws-server-get_status.adb:
	(Session_Table): Update to use Matrix_Tag. There is no more HTML
	 tag hard coded. Use suffix _V for vector tag (was _L for
	 historical reasons).

	* aws-server-protocol_handler.adb:
	(Parse): fix bug in parsing the Cookie line. Some format were not
	 supported.

2001-05-07  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-session.adb:
	A lot of changes to simplify the code to handle session data. The
	 AVL tree now use the SID instead of the string image of
	 it. Change all routines to support this new architecture. This
	 simplification should also improve the performance.

	* aws-response.ads:
	(URL): fix comment.

	* aws-session.adb:
	(Delete): new procedure.
	(SID_Random): new package.
	(SID_Generator): new variable.
	(Database.Delete_Session): new entry.
	(Clean): variable Now is now a constant.
	(New_Session): change implementation to used to random session ID.
	Reset SID_Generator at package elaboration.

	* aws-session.ads:
	(Delete): new procedure.
	(ID): change to a larger interger based type.

2001-05-06  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-status.adb:
	Minor reformating.

	* aws-server.ads:
	Update comment.

	* aws-response.ads:
	Minor reformating.
	Update copyright notice.

	* aws-server-protocol_handler.adb:
	(Answer_To_Client): Set Peername before calling user's callback.

	* aws-status.adb:
	(Peername): new function.

	* aws-status.ads:
	(Data): add field Peername.
	(Peername): new function.

	* aws-status-set.ads, aws-status-set.adb:
	(Peername): new procedure.

	* aws-server.adb:
	(Abort_Oldest): raise Internal_Error instead of displaing a bug
	 message. This should never happen anyway.

	* aws-response.ads:
	(Default_Handler): removed.

	* aws.ads:
	(Version): set 0.10.
        Update copyright notice.

	* aws-status.adb: 
	(Parameter): remove Case_Sensistive parameter. More efficient
	 implementation in the non case sensitive case.
	(Normalize_Name): new procedure.
        Update copyright notice.

	* aws-status.ads:
	(Data): add discriminant Parameters_Case_Sensitive. Default is set
	 to True. CGI parameters are case sensitive by default.
	(No_Data): removed.
	(Parameter): remove Case_Sensistive parameter.
	(Normalize_Name): new procedure.
        Update copyright notice.

	* aws-status-set.adb:
	(Parameters): Set name to upper case if no case sensitive parameters
	 requested.
	(Reset): Free Binary_Data parameter (avoid memory leak). Initialize
	 all parameters to their default value.
        Update copyright notice.

	* aws-server.adb:
	(Start): add many parameters that were HTTP discriminant. Initialize 
	 HTTP new parameters.
	(Set_Abortable): better implementation.
	(Abort_Oldest): better implementation.
	(Get): is now a protected entry. (better implementation). We
	 should not call this entry if there is no free slot available
	 except if some Slot have an abortable state. This should fix some
	 browser hanging.
	(Line): do not anymore output message about line beeing
	 closed. This was a message for the AWS early days to ease
	 debugging and does not need to be there anymore.
        Update copyright notice.
	
	* aws-server.ads:
	(HTTP): remove all discriminants except Max_Connection. All values
	 will be set by the Start procedure. This is more dynamic.
	(Start): add many parameters that were HTTP discriminant.
	(Abort_Oldest): fix comments.
	(Slots): add Abortable_Count variable.
        Update copyright notice.

	* aws-server-protocol_handler.adb:
	Call Status.Set.Reset at start of the loop (simplify code).
	(C_Stat): Add discriminant to declaration.
	(Will_Close): handle case for Netscape HTTP/1.0 and Keep-Alive
	 connection. Should fix some more server hanging.
        Update copyright notice.
	
	* aws-communication-server.adb:
	(Start): use new HTTP definition (only one discriminant) others
	 setting are done through the Server.Start procedure.
        Update copyright notice.

2001-05-04  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-server-get_status.adb:
	(Slot_Table): Add Peer_Name to the vector tag list (PEER_NAME_L).

2001-05-02  Pascal Obry  <p.obry@wanadoo.fr>

	* aws.ads:
	(Version): set to 0.9.12.

	* aws-session.adb:
	(UID): new type.
	(SID_Prefix): new string constant.
	(New_Session): session ID is now based on the current time to be
	 sure that a session ID is uniq. This was not the case before and
	 in some case 2 clients could have the same SID, hence sharing the
	 same session data.
	(Image): use SID_Prefix.
	(Value): use SID_Prefix'Length.

	* aws-session.ads:
	(ID): change type to a 40 bits integer based value.

	* aws-server-protocol_handler.adb:
	(Parse): fix cookie token offset when reading the the cookie
	 data. This was a serious bug in the AWS session feature.

2001-05-01  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-server-protocol_handler.adb:
	(Answer_To_Client): use PNG images instead of GIF images for
	 built-in server status page.

2001-04-29  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-client.adb:
	(Get): init Persistent field to False.
	(Head): idem.
	(Put): idem.
	(Post): idem.
	(Persistence): new function.
	(Send_Command): do not always send Keep-Alive, use new Persistence
	 function.
	(Create): add Persistent parameter to create a Keep-Alive
	 connection.

	* aws-client.ads:
	(Create): add Persistent parameter to create a Keep-Alive
	 connection.
	(HTTP_Connection): add Persistent field.

	* aws-server-protocol_handler.adb:
	(Will_Close): fix test, we want a keep-alive connection by default
	 (i.e. client says nothing about the connection).

	* aws-server.ads:
	(Keep_Open_Duration): set to 80 seconds to match standard browser
	 expectation.

2001-04-28  Pascal Obry  <p.obry@wanadoo.fr>

	* makefile:
	(clean): remove build_std file. Was preventing to build a non SSL
	 AWS version after a SSL one.

	* aws.ads:
	(Version): set to 0.9.11.

	* aws-server.adb:
	(Increment_Slot_Activity_Counter): new procedure.

	* aws-server.ads:
	(Slot): add Slot_Activity_Counter.
	(Increment_Slot_Activity_Counter): new procedure.

	* aws-server-protocol_handler.adb:
	Set increment slot activity counter.
	Fix check for "close" connection (if not keep-alive).

	* aws-server-get_status.adb:
	Add handling of slot activity counter.

	* aws-messages.ads, aws-messages.adb:
	(Does_Not_Match): new function.

	* aws-client.adb:
	(Disconnect): use proper order for Is_Math parameters.
	(Put): idem.
	
	* aws-server-protocol_handler.adb:
	(Will_Close): new boolean.
	(Header_Date_Serv): removed.
	(Send_Connection): removed.
	(Send_General_Header): new procedure implementing
	 Header_Date_Servname and Send_Connection.
	(Protocol_Handler): set Will_Close before answerting to the client
	 to be sure that we are sending the "close" request before
	 actually closing the socket (Fix from Dmitriy Anisimkov). This
	 patch will certainly fix problem with hanging browser, waiting
	 for an answer from the server.

2001-04-27  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-server-protocol_handler.adb:
	Minor reformating.
	(Answer_To_Client): Use URL API instead of Moved.
	(Send_File): let Name_Error propagate outside of the routine.

	* aws-hotplug-get_status.adb:
	Many changes to use new Templates_Parser API.

	* aws-server-get_status.adb:
	Lot of changes to use new Templates_Parser API.

	* aws-response.adb:
	(URL): new function.

	* aws-response.ads:
	(URL): new function.
	Minor reformating.

	* aws-mime.adb: 
	Minor reformating.

2001-03-13  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-net.ads:
	Minor style update.

	* aws-net-ssl.adb:
	(Init): do not propagate Lib_Error exception if the default
	 certificate has not been found. The certificate could be selected
	 by users later.

2001-03-10  Pascal Obry  <p.obry@wanadoo.fr>

	* aws.ads:
	(Version): set to 0.9.10

	* aws-server.adb:
	(Geet_Peername): Fix C_Getpeername call prototype to match latest
	 version of Adasocket.

	* aws-server-get_status.adb:
	(Slot_Table): do not ouput Socket value if it is not open.

	* aws-config.adb:
	(Regexp): fix typo (patch from Sune Falck).

2001-03-06  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-server-protocol_handler.adb:
	Minor reformatting.

	* aws-messages.ads:
	(Authorization): new function.
	(Host): new function.
	(Proxy_Connection_Token): new constant.
	(Proxy_Connection_Range): new subtype.
	(Proxy_Connection): new function.
	(Accept_Token): new constant.
	(Accept_Range): new subtype.
	(Accept_Type): new function.
	(Accept_Laguage_Token): new constant.
	(Accept_Language_Range): new subtype.
	(Accept_Language): new function.
	(Proxy_Authorization_Token): new constant.
	(Proxy_Authorization_Range): new subtype.
	(User_Agent_Token): new constant.
	(User_Agent_Range): new subtype.
	(User_Agent): new function.

	* aws-messages.adb:
	(Proxy_Connection): new function.
	(User_Agent): new function.
	(Accept_Language): new function.
	(Accept_Type): new function.
	(Proxy_Connection): new function.
	(Authorization): new function.
	(Host): new function.
	
	* aws-client.ads, aws-client.adb:
	(HTTP_Connection): new private type (keep-alive client
	 implementation, checked-in for Dmitriy Anisimkov)
	(Create): new procedure.
	(Get): new procedure.
	(Head): new procedure.
	(Put): new procedure
	(Post): new procedure.
	(Close): new procedure.
	(Retry_Defaul): new constant.
	Improve comments.

2001-03-05  Pascal Obry  <p.obry@wanadoo.fr>

	* makefile:
	Simplify it and add some comments.

2001-02-16  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-server-protocol_handler.adb:
	(Get_Message_Data): Use Content_Length to read POST message
	 data. Avoid to lost some data.

	* aws-translater.adb: 
	(Base64_Decode) Fix problem with '=' handling.

2001-01-10  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-server-protocol_handler.adb:
	(Send_File): handle exception when a file is not found. We don't
	 want to crash in this case.
	(File_Upload): handle properly the server name on the server side.
	(Answer_To_Client): return an error message in case status.tmplt
	 file can not be found.

	* aws-communication-server.ads:
	Fix comments.

2001-01-03  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-client.adb:
	(Get_Response): Use MIME type declaration instead of strings.

	* aws-server-protocol_handler.adb:
	(Protocol_Handler): Use MIME type declaration instead of strings.

	* aws-response.ads:
	(Acknowledge): Use MIME type declaration instead of strings.
	Fix typo.

	* aws-response.adb:
	(Acknowledge): Use MIME type declaration instead of strings.
	(Authenticate): idem
	(Moved): idem

	* aws-os_lib.adb:
	(GMT_Clock): Fix month number.

	* aws-mime.adb:
	MIME type declarations moved to the spec. Fix casing.

	* aws-mime.ads:
	Move MIME type declaration here from the body.

2000-11-21  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-os_lib.adb:
	(Is_Regular_File): do not return an exception but return False if
	 file does not exist.
	(Is_Directory): idem.

2000-11-12  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-response.adb:
	Put routine in alpha order.

	* aws-response.ads:
	Comment API.

	* aws-server-protocol_handler.adb:
	Lot of change to use AWS.Status.Set instead of AWS.Status.

2000-11-12  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-status.adb:
	Move all routines to set the status to aws-status-set.adb.
	Set routine in alpha order.

	* aws-status.ads:
	Move all routines to set the status to aws-status-set.ads. This is
	cleaner from a user point of view as this unit contain only
	usefull routines.

	* aws-status-set.ads, aws-status-set.adb:
	Initial revision.

	* aws-server-protocol_handler.adb:
	(Target_Filename): use Config.Upload_Directory instead of the
	 obsolete one in AWS.Server.Config.

	* aws-config.adb:
	(Upload_Directory): new function.
	(Initialize): handle Upload_Directory parameter.
	
	* aws-config.ads:
	(Upload_Directory): new function.

2000-11-11  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-server-protocol_handler.adb:
	Minor comment update.

	* aws-log.adb:
	(Start): add Split parameter.
	(Write): check if log file need to be changed (daily, monthly).
	
	* aws-log.ads:
	(Split_Mode): new type.
	(Start): add Split parameter.
	Update comments.

	* aws-config.ads, aws-config.adb:
	Initial revision.

2000-11-09  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-server-protocol_handler.adb:
	(Send_File): do not propagate exception.

2000-10-29  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-net.ads:
	Comment unit.

2000-10-28  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-client.adb:
	(Get_Response): new parameter Get_Body. Read message body only if
	 Get_Body is set.
	(Head): new function.
	
	* aws-client.ads:
	(Head): new function.

	* aws-os_lib.adb:
	(GMT_Clock): renaming of OS_Clock. Correct implementation that
	 does return the GMT time.

	* aws-os_lib.ads:
	(GMT_Clock): renaming of OS_Clock.

	* aws-server-protocol_handler.adb:
	(Header_Date_Serv): use GMT_Clock (was OS_Clock).

2000-10-22  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-communication-server.adb:
	Add missing Receive prototype. (fix style error).

	* makefile:
	(SOURCES): add aws-log.adb aws-hotplug.adb aws-communication.adb
	 aws-communication-server.adb aws-communication-client.adb
	 aws-server-hotplug.adb

	* aws-hotplug.adb:
	(Apply): fix style error.

	* aws-utils.adb:
	(Gethostname): fix style error.

	* aws-hotplug.ads, aws-hotplug.adb:
	(Move_Up): new procedure.
	(Move_Down): new procedure.

	* aws-server-get_status.adb:
	(Get_Status): add ADMIN tag in the Translations table.

	* aws-server-hotplug.adb:
	(Message): Use string constants Register_Message and
	 Unregister_Message.

	* aws-server-hotplug.ads:
	(Register_Message): new string constant.
	(Unregister_Message): new string constant.

	* aws-server-protocol_handler.adb:
	(Answer_To_Client): Handle hotplug status page items.

2000-10-22  Pascal Obry  <p.obry@wanadoo.fr>

	* aws.ads:
	(Version): set to 0.9.9.

	* aws-server-protocol_handler.adb:
	(Answer_To_Client): look for Hotplug module before using the
	 server's default callback procedure. Handle hotplug status page
	 items.

	* aws-communication-client.adb:
	(Gethostname): moved to AWS.Utils.
	(Send_Message): use AWS.Utils.Gethostname.

	* aws-communication-server.adb:
	Removes code to start Server from the package elaboration code
	 This will now be done at runtime by the start procedure.
	(Start): new procedure.
	(Context): new global variable.
	(Com_Server): is now an HTTP_Access.
	(Shutdown): free the memory associated with the Com_Server.
	(Receive): pass the Context to the callback.

	* aws-communication-server.ads:
	Removes generic formal parameter Port and add a type T (and its
	 access type). This is to be able to pass a context to the
	 Callback generic formal function.
	(Start): new procedure.
	
	* aws-communication.ads:
	(Parameters): improve comments.

	* aws-server.adb:
	Add with AWS.Session.

	* aws-server.ads:
	(HTTP_Access): type moved outside the private section.
	(HTTP): add field Filters.

	* aws-utils.adb:
	(Gethostname): new function.

	* aws-utils.ads:
	(Gethostname): new function.
	Removes pragma pure.

	* aws-server-get_status.adb:
	Add Hotplug translate table.

	* aws-hotplug-get_status.ads, aws-hotplug-get_status.adb:
	Initial revison.

	* aws-server-hotplug.ads, aws-server-hotplug.adb:
	Initial revision.

	* aws-hotplug.ads, aws-hotplug.adb:
	Initial revision.

2000-10-20  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-net-std.adb:
	Minor comment casing fixes.

	* aws-mime.adb:
	(Dot_Jpeg): fix string value.

2000-10-18  Pascal Obry  <p.obry@wanadoo.fr>

	* aws.ads:
	(Version): set to 0.9.5.

	* aws-communication-client.ads, aws-communication-client.adb:
	Initial revision.

	* aws-communication-server.ads, aws-communication-server.adb:
	Initial revision.

	* aws-communication.ads, aws-communication.adb:
	Initial revision.

2000-10-17  Pascal Obry  <p.obry@wanadoo.fr>

	* aws.ads:
	(Version): set to 0.9.2 (previous check-in was wrong).

	* aws-session.ads, aws-session.adb:
	(Shutdown): new procedure.

	* aws-server.adb:
	(Start): start session server only if needed.
	(Shutdown): stop session server.
	(Line): do not display error message if we are in a shutdown process.

	* aws-server.ads:
	(HTTP): add boolean field Shutdown.

2000-10-16  Pascal Obry  <p.obry@wanadoo.fr>

	* makefile:
	(SOURCES): add aws-utils.adb, aws-key_value.adb and aws-log.adb
	
	* aws.ads:
	(Version): set to 0.9.2.

	* aws-session.adb:
	(Get_Value): Use new Update_Node prototype.
	(Key_Exist): Use new Update_Node prototype.
	(Set_Exist): Use new Update_Node prototype.
	Remove comment out code.

	* aws-log.ads, aws-log.adb:
	Initial revision.

	* aws-parameters.adb:
	(Image): removed use Utils.Image instead.
	(Add): Use new Update_Node prototype.
	
	* aws-server.adb:
	(File_Upload_UID): new protected object.
	(Set_Peername): new procedure.
	(Get_Peername): new procedure.
	(Get_Peername): new procedure.
	Removes unused with (not used anymore with GNAT 3.13)

	* aws-server.ads:
	(Slot): add Peername field.
	(Set_Peername): new procedure.
	(Get_Peername): new procedure.

	* aws-utils.ads, aws-utils.adb:
	Initial revision.

	* aws-server-protocol_handler.adb:
	(Answer_To_Client): write log.
	(Target_Filename): add a UID to the name to avoid name clash.
	Use Utils.Image instead of a local version.

2000-10-14  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-server.ads:
	(HTTP): move up Self field.

	* aws-parameters.ads, aws-parameters.adb, aws-session.adb:
	Remove use of Avl_Tree_Generic, implementation now use
	 AWS.Key_Value package shared by two units right now. It reduces
	 the overall size of AWS executables.

	* aws-key_value.ads, aws-key_value.adb:
	Initial revision.

2000-10-10  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-status.ads:
	(Count): new function.
	(Parameter): add parameter N.

	* aws-parameters.adb:
	Add some documentation about the underlying implementation.
	(Internal_Get): new function.
	(Add): support Key with multiple values.
	(Count): new function.
	(Get): add parameter N, use Internal_Get.

	* aws-parameters.ads:
	(Count): new function.
	(Get): add parameter N.

	* aws-status.adb:
	(Set_Parameters): fix bug when parsing an empty parameter at the
	 end of the list.
	(Count): new function.
	(Parameter): add parameter N, implement returning the Nth value.

2000-10-09  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-server-protocol_handler.adb:
	(Send_Message): send Location field is needed.

	* aws-response.adb:
	(Acknowledge): add initialization for new Location field.
	(Authenticate): add initialization for new Location field.
	(Build): add initialization for new Location field.
	(Moved): new function.
	(File): add initialization for new Location field.
	(Location): return the Location field.
	
	* aws-response.ads:
	(Default_Moved_Message): new constant.
	(Moved): new function.
	(Data): Add field Location.

	* aws-messages.ads, aws-messages.adb:
	(Location): new function.

2000-10-08  Pascal Obry  <p.obry@wanadoo.fr>

	* makefile:
	(SOURCES): update list.
	(build): add build step for AWS.Parameters unit.

	* aws-client.adb:
	(Init_Connection): Host header data must reference the target
	 computer and not the proxy.
	Removes unused units.

	* aws-server-protocol_handler.adb:
	Fix bad casing and layout.

	* aws-server-config.ads:
	Fix bad casing.

	* aws-server-protocol_handler.adb:
	(Target_Filename): moved (one level up).
	(File_Upload): better way to check for file upload mode. Fix
	 algorithm to detect empty file upload parameter. Use new
	 Set_Parameter procedure.

	* aws-status.adb:
	Removes Ada.Text_IO (not used).
	(Set_Parameters): new procedure.

	* aws-status.ads:
	Minor reformating.
	(Set_Parameters): new procedure.

2000-10-04  Pascal Obry  <p.obry@wanadoo.fr>

	* aws.ads:
	(Version): set to 0.9.

	* aws-status.ads:
	(Reset): new procedure.
	(Set_Multipart_Boundary): new procedure.
	(Multipart_Boundary): new function.
	(Data): parameter field is now a AWS.Parameters.Set.
	Add some comments.
	
	* aws-status.adb:
	(Multipart_Boundary): new function.
	(Parameter): complete reimplementation (more efficient now).
	(Parameter_Name): idem.
	(Reset): new procedure.
	(Set_Multipart_Boundary): new procedure.
	(Set_Parameters): complete reimplementation (more efficient now).
	(Set_Request): call to Set_Parameters to setup the form
	 parameters.
	
	* aws-server.ads:
	(Default_Upload_Path): new constant.
	(HTTP): add field Upload_Path.

	* aws-server.adb:
	(Start): set the Web_Server.Upload_Path	to the default value.

	* aws-server-protocol_handler.adb:
	(File_Upload): new procedure.
	(Value_For): new function.
	(Get_Message_Data): add some comments. Check if we have a
	 multipart form data (file upload) to handle.
	(Parse): correctly handle the Content-Type line. A Content-Type
	 can be followed by a boundary information when uploading a
	 file. Set the Multipart_Boundary if needed.
	(Protocol_Handler): reset the status data before handling a new
	 request.

	* aws-messages.ads:
	(Multipart_Form_Data): new constant.
	
2000-10-03  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-server-config.ads, aws-server-config.adb:
	Initial revision.

2000-10-01  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-parameters.ads, aws-parameters.adb:
	Initial revision.

2000-09-21  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-server.ads:
	(Slot): removes Quit field (was not used anymore).

	* aws-server.adb:
	(Get): properly set Abortable status here. minor reformating.
	(Line): removes call to Set_Abortable.

	* aws-server-protocol_handler.adb:
	(Answer_To_Client): minor reformating.
	(Get_Message_Header): set abortable status here.
	(Protocol_Handler): remove call to Set_Abortable.

	* aws-server-get_status.adb:
	removes Quit variable (does not exist anymore).

2000-09-20  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-server-protocol_handler.adb:
	(Send_File): close file if there is an exception raised during
	 transfert.

2000-09-16  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-mime.ads:
	Add some comments.

2000-09-11  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-client.adb:
	(Get_Host_Name): removed.
	(Port_Not_Default): new function.
	(Open_Socket): send correct "Host:" field.
	(Init_Connection): minor change to User-Agent field value.

2000-09-10  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-server-protocol_handler.adb:
	(Header_Date_Serv): Use OS_Lib.OS_Clock instead of Calendar.Clock.

	* aws-response.adb: 
	(Acknowledge): add Content_Type string.
	Properly set the content type when message body non empty.

	* aws-response.ads:
	(Acknowledge): add Content_Type string.

2000-09-09  Pascal Obry  <p.obry@wanadoo.fr>

	* aws.ads:
	(Version): set to 0.8.2.

	* aws-client.adb:
	Minor reformating.

2000-09-07  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-session.adb: 
	(Cleaner): update Next_Run.

	* aws-server-protocol_handler.adb:
	Remove POSIX withed units, use AWS.OS_Lib instead.
	(File_Timestamp): removed.
	(Send_File_Time): new procedure.
	(Send_File_Size): new procedure.
	(Is_Valid_HTTP_Date): new function.
	(Header_Date_Serv): minor reformating.
	(Send_File): check that the HTTP date filed is correctly
	 formated. Handle correctly HEAD method (From Sune Falck).
	(Send_File): remove use of POSIX. Send file in piece instead of
	 reading and sending the whole file. Should fix problem with very
	 big file. (From Sune Falck).
	
	* aws-os_lib.ads, aws-os_lib.adb: 
	Initial revision.

2000-09-05  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-server-protocol_handler.adb: 
	Add comments.
	Minor reformating.

2000-09-04  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-server-protocol_handler.adb:
	(Answer_To_Client.Send_File): fix check for up-to-date file (fix
	 from Sune Falck).
	(Send_File): open file with shared=no (fix from Sune Falck).
	(Send_File.Send_File): remove a newline sent to the socket (fix
	 from Sune Falck).
	
	* aws.ads:
	(Version): set to 0.8.1.

	* aws-net-ssl.adb: 
	(Connect): minor indentation.

	* aws-server-protocol_handler.adb: 
	(Protocol_Handler): HTTP_Server parameter changed to "in out" mode.

	* aws-server.adb:
	(Protocol_Handler): HTTP_Server parameter changed to "in out" mode.

	* aws-server.ads:
	(Slot): initialize Activity_Time_Stamp.
	(Slots_Access): type removed.
	(HTTP): field slot is a protected type (was a protected access).

2000-09-02  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-session.adb: 
	(Start): new procedure.
	(Cleaner): is now a task type.
	(Cleaner_Task): a pointer to a Cleaner task.

	* aws-session.ads:
	(Start): new procedure.

	* aws-server.adb: 
	(Start): call Session.Start to start session server.

	* aws-session.adb:
	Fix some bad casing. Remove a space.

	* aws.ads: 
	(Version): set to 0.8.

	* aws-status.ads: 
	(Session): ne functions.
	(Set_Session): new procedure.
	(Data): add Session_ID field to this record.
	(No_Data): add intialization for new field Session_ID.
	
	* aws-status.adb:
	(Session): ne functions.
	(Set_Session): new procedure.

	* aws-server.ads: 
	(Keep_Open_Duration): set to 30 seconds (was 120).
	(HTTP): add Session field.

	* aws-server-protocol_handler.adb: 
	(Send_Session_Cookie): new boolean.
	(Create_Session): new procedure.
	(Header_Date_Serv): send a cookie to the client browser if needed.
	(Answer_To_Client): add code to return the AWS status page
	 logo. Call Create_Session to initialize session.
	(Parse): handle cookie.

	* aws-server-get_status.adb:
	(Session_Table): new function.
	(Slot_Table): rename all tag variable to end by _L and not _T
	(Get_Status): add tag variables LOGO and SESSION.

	* aws-messages.ads: 
	(Cookie_Token): new constant.
	(Cookie_Range): new subtype.

	* aws-session.ads, aws-session.adb: 
	Initial revision.

2000-09-01  Pascal Obry  <p.obry@wanadoo.fr>

	* aws.ads:
	(Version): set to 0.7

	* aws-server-get_status.ads: 
	Initial revision.

	* aws-server-get_status.adb: 
	Initial revision.

	* aws-server.adb:
	(Protocol_Handler): simplify prototype now that we have a
	 reference to the HTTP server (no need to drag around so much
	 data). 
	(Line): remove many variable not needed anymore.
	(Start): add Admin_URI parameter.
	
	* aws-server.ads:
	(HTTP): add the field Self to the record. It is an auto-pointer
	 (i.e. pointing to itself).
	(Start): add Admin_URI parameter.

	* aws-server-protocol_handler.adb:
	(Protocol_Handler): simplify prototype now that we have a
	 reference to the HTTP server (no need to drag around so much
	 data). Simplify the code to use the HTTP reference.

	* aws-messages.ads: 
	Fix typo.

2000-08-27  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-response.ads, aws-response.adb:
	(Acknowledge): add Message_Body parameter.

2000-08-23  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-translater.adb:
	(Decode_URL): fix a problem with null string parameter.

2000-08-14  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-server-protocol_handler.adb: 
	(Get_Message_Data): do not decode URL parameters here.
	(Parameters): do not decode URL parameters here.

	* aws-server.adb: 
	remove withed unit Translater (not used anymore).

	* aws-status.adb: 
	(Parameter): decode URL parameter.

	* aws-status.ads:
	(Set_Authorization): new procedure
	(Authorization_Name): new function
	(Authorization_Password): new function
	(Data): new field Auth_Name and Auth_Password.
	
	* aws-status.adb:
	(Set_Authorization): new procedure
	(Authorization_Name): new function
	(Authorization_Password): new function
	
	* aws-server-protocol_handler.adb: 
	Handle authorization protocol.

	* aws-messages.ads: 
	Add Authorization_Token
	Sort constants in alphabetical order.

2000-08-01  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-server.adb:
	(Line): minor text message change.

	* aws-server-protocol_handler.adb:
	(Get_Message_Data): correctly detect a closed socket.
	(Get_Message_Header): idem

2000-07-28  Pascal Obry  <p.obry@wanadoo.fr>

	* aws-net-ssl.adb: 
	(Accept_Socket): remove call to Init.
	(AWS.Net): add call to Init during elaboration of the package.

2000-07-26    Pascal Obry <p.obry@wanadoo.fr>

	* aws.ads:
	(Version): updated to 0.6
	
	* aws-net.ads:
	Fix copyright notice.
	
	* aws-server.adb:
	Fix minor typo.

2000-07-26    Pascal Obry <p.obry@wanadoo.fr>

	Integration of Dmitriy Anisimkov SSL implementation into AWS.

	* aws.ads:
	(Connection_Error): new exception.

	* aws-client.ads:
	(Post): new function.
	Fix copyright notive.

	* aws-client.adb:
	(Post): new function.
	(Init_Connection): add support for POST method
	(Open_Socket); new function.
	Fix copyright notive.

	* aws-net.ads:
	Initial revision
	
	* aws-net-ssl.adb:
	Initial revision
	
	* aws-net-std.adb:
	Initial revision

	* aws-server.ads:
	(Get): update comments
	(HTTP): add field Security.
	
	* aws-server.adb:
	Use AWS.Net
	(Line): handle security.

	* aws-server-protocol_handler.adb:
	Sock parameters is now a Socket_FD'Class.

	* aws-status.adb:
	Minor casing fix.
	
	* aws-url.ads:
	(Security): new function
	(Object): new field Security

	* aws-url.adb:
	(Parse): add support for HTTPS
	(Security): new function
	
2000-04-05    Dmitriy Anisimkov <anisimkov@iforex.net>

	* aws-client.adb:
	(Parse_Header): correctly initilialize Content_Length.
	
	* aws-connection.ads, aws-connection.adb:
	Removed not needed anymore.
	
	* aws-server.ads, aws-server.adb:
	Complete rewrite. more efficent implementation.

	* aws-server-protocol_handler.adb
	Initial revision. (most of the code here comes from AWS.Connection).

2000-04-05    Dmitriy Anisimkov <anisimkov@iforex.net>

	* aws-connection.ads:
	(Slot): add Aborted field.
	
	* aws-connection.adb:
	(Abort_Slot): new procedure
	(Line): use Abort_Slot. general cleanup.
	(Line_Cleaner): use Abort_Slot instead of Sosckets.Shutdown
	(Get_Free_Slot): idem
	
2000-04-01    Pascal Obry <p.obry@wanadoo.fr>

	* aws-client.adb, aws-connection.adb, aws-messages.adb,
	  aws-translater.adb, aws-url.adb:
	Minor reformatting to conform to -gnaty switch.
	
2000-04-01    Pascal Obry <p.obry@wanadoo.fr>
	
	* aws.ads
	(Version): changed to 0.4
	
	* aws-connection.ads:
	(Slot): moved here from the body as a limited private type. Abortable, 
	 Activity_Time_Stamp, Sock fields added.
	(Line): add access to Slot discriminant

	* aws-connection.adb:
	(Slot): moved to spec
	(Counter): rename Free to Release. Free is now a function
	 returning True if some free Slot are available.
	(Free): removed.
	(Line_Cleaner): added
	(Line): Shut down properly the sockets when needed.
	(Get_Free_Slot): try abort some line slot if there is no free one.

2000-03-10    Pascal Obry <p.obry@wanadoo.fr>

	* aws-connection.adb: 
	(Line): never exit with an exception from the outer loop in this
	task. We have a pool of Line that gets recycled.
	
2000-03-05    Pascal Obry <p.obry@wanadoo.fr>

	* aws-connection.adb:
	(line): do not send a message to the client when an exception has
	 occured since this is because the server has most certainly
	 closed the connection. (fixes from Dmitriy Anisimkov)

2000-02-14    Pascal Obry <p.obry@wanadoo.fr>

	* aws-client.adb:
	(Get): Handle status 301 (moved permanently) with Location message.
	(Read_Message): new function

	* aws-messages.ads:
	(Location_Token): new constant

	* aws-response.ads, aws-response.adb:
	(Location): new function
	
2000-02-05    Pascal Obry <p.obry@wanadoo.fr>

	* aws-clients.adb:
	(Put): new function
	(Init_Connection): new function
	(Parse_Header): new function
	(Get): reorganized - use Init_Connection to Parse_Header

	* aws-clients.ads:
	(Put): new function

	* aws-messages.ads:
	(Head_Token): new constant
	(Form_Data): new constant
	(Content_Length): parameter changed from Positive to Natural
	(Www-Authenticate): new function
	
	* aws-messages.adb:
	(Content_Length): parameter changed from Positive to Natural
	(Www-Authenticate): new function
	
	* aws-response.ads:
	(Data_Mode): add Header to the enumeration
	(Content_Length): parameter changed from Positive to Natural
	(Acknowledge): new function
	
	* aws-response.adb:
	(Content_Length): parameter changed from Positive to Natural
	(Acknowledge): new function
	
	* aws-status.ads, aws-status.adb:
	(Set_Parameter): new function with Stream_Element_Array data
	(Set_Content_Type): new function
	(Content_Type): new function
	(Binary_Data): new function
	
	* aws-connection.adb:
	A lot of changes to handle PUT method and handle POST method with
	binary data.
	
2000-02-04    Pascal Obry <p.obry@wanadoo.fr>

	* aws-clients.adb:
	(Get_Host_Name): new function use to get the host name to send to
	the server.

	* aws-messages.adb:
	(Weekday): fix minor bug (use local var for time) 
	[patch from Sune Falck]

2000-01-24    Pascal Obry <p.obry@wanadoo.fr>

	* aws.ads:
	(Internal_Error): exception added.
	
	* aws-client.adb:
	(Get): Fix sockets interface to use the UNIX compliant one.

	* aws-connection.adb:
	(Internal_Error): exception removed.
	
	* aws-messages.adb:
	(Status_Code_Image): new type to handle 3 digits status code
	(Status_Data): Code is now a Status_Code_Image
	(Status_Messages): change declaration to match new design.

2000-01-24    Sune Falck <Sune.Falck@swipnet.se>

	* aws-messages.adb:
	Changed Image to handle Natural instead of Positive, gave
	constraint_error for 0 in seconds and minutes. Image now returns a
	leading zero for numbers with only one digit so that time and day
	representation will be correct. Changed Month_Name to an array
	instead of a function. Changed Month_Number to use the array
	Month_Name. Added function Weekday.

2000-01-22    Pascal Obry <p.obry@wanadoo.fr>

	* aws*.ad[sb]: this is to be considered the first version of AWS

2000-01-16    Pascal Obry <p.obry@wanadoo.fr>
	
	* aws*.ad[sb]: this is the very first release.
